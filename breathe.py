import sys
import time
import pymorphy2
import pyglet
import pyttsx3
import threading
import warnings
warnings.filterwarnings("ignore")

speech_voice = 3  # –≥–æ–ª–æ—Å–æ–≤–æ–π –¥–≤–∏–∂–æ–∫
rate = 120
tts = pyttsx3.init()
voices = tts.getProperty("voices")
tts.setProperty('rate', rate)
tts.setProperty("voice", voices[speech_voice].id)
# lock = threading.Lock()  # –≤–∑–∞–∏–º–æ–±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –æ—Ç–¥–µ–ª—å–Ω—ã—Ö –≥–æ–ª–æ—Å–æ–≤—ã—Ö –ø–æ—Ç–æ–∫–æ–≤


def nums(what, morph=pymorphy2.MorphAnalyzer()):
    """ —Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–∏–µ —Å—É—â–µ—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã—Ö —Å —á–∏—Å–ª–∏—Ç–µ–ª—å–Ω—ã–º–∏, —Å—Ç–æ—è—â–∏–º–∏ –ø–µ—Ä–µ–¥ –Ω–∏–º–∏ """
    what = what.replace('  ', ' ').replace(',', ' ,')
    phrase = what.split(' ')
    for i in range(1, len(phrase)):
        if 'NUMB' in morph.parse(phrase[i - 1])[0].tag:
            phrase[i] = str(morph.parse(phrase[i])[0].make_agree_with_number(abs(int(phrase[i - 1]))).word)
        if 'NUMB' in morph.parse(phrase[i - 2])[0].tag:
            phrase[i] = str(morph.parse(phrase[i])[0].make_agree_with_number(abs(int(phrase[i - 2]))).word)
    return ' '.join(phrase).replace(' ,', ',')


def speak(what):
    print('üîä ', what)
    tts.say(what)
    tts.runAndWait()
    # tts.stop()


def say(what):
    # lock.acquire()
    thread1 = threading.Thread(target=speak, kwargs={'what': what})
    thread1.start()
    # thread1.join()
    # lock.release()


def play_wav(src):
    wav = pyglet.media.load(sys.path[0] + '\\src\\wav\\' + src + '.wav')
    wav.play()
    time.sleep(wav.duration)


def play_wav_inline(src):
    wav = pyglet.media.load(sys.path[0] + '\\src\\wav\\' + src + '.wav')
    wav.play()


def breathe(number):
    for i in range(number):
        print('–í–¥–æ—Ö', str(i + 1))
        play_wav('inhale')
        play_wav('exhale')


def stopwatch(seconds: int):
    min = seconds // 60
    sec = seconds % 60
    return '{:02}:{:02}'.format(min, sec)


def clock_tick(hold):
    for i in range(hold):
        play_wav('clock')


def breathing(rounds=3, breaths=30, hold=15):
    speak(nums('–í—ã–ø–æ–ª–Ω—è–µ–º ' + str(rounds) + ' —Ä–∞—É–Ω–¥ –¥—ã—Ö–∞–Ω–∏—è'))
    speak('–í –∫–∞–∂–¥–æ–º —Ä–∞—É–Ω–¥–µ ' + nums(str(breaths) + ' –≥–ª—É–±–æ–∫–∏–π –≤–¥–æ—Ö –∏ ' + str(breaths) + ' —Å–ø–æ–∫–æ–π–Ω—ã–π –≤—ã–¥–æ—Ö'))
    for i in range(rounds):
        play_wav_inline('reinsamba__gong')
        speak('–†–∞—É–Ω–¥ ' + str(i + 1))
        breathe(breaths)
        speak('–ó–∞–¥–µ—Ä–∂–∞–ª–∏ –¥—ã—Ö–∞–Ω–∏–µ –Ω–∞ –≤—ã–¥–æ—Ö–µ')
        start_time = time.time()
        input()
        print(stopwatch(int(time.time() - start_time)))
        play_wav_inline('inhale')
        speak('–ì–ª—É–±–æ–∫–∏–π –≤–¥–æ—Ö.\n–ó–∞–¥–µ—Ä–∂–∏–≤–∞–µ–º –¥—ã—Ö–∞–Ω–∏–µ –Ω–∞ ' + nums(str(hold) + ' —Å–µ–∫—É–Ω–¥–∞'))
        clock_tick(hold)
        play_wav_inline('exhale')
        speak('–í—ã–¥–æ—Ö–Ω—É–ª–∏')
        time.sleep(1)


print('\n‚ôª4 üó£30 ‚è±12')
rounds, breaths, hold = 4, 2, 12
breathing(rounds, breaths, hold)
speak('–¢–µ–ø–µ—Ä—å –æ—Ç–¥—ã—Ö–∞–µ–º, –≤–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –¥—ã—Ö–∞–Ω–∏–µ')
